{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TimeandLocation(){const[currentDate,setCurrentDate]=useState(\"\");const[currentTime,setCurrentTime]=useState(\"\");useEffect(()=>{function formatDate(date){const options={year:'numeric',month:'long',day:'numeric'};return date.toLocaleDateString([],options);}function updateTime(){const now=new Date();const timeString=now.toLocaleTimeString();setCurrentTime(timeString);}const intervalId=setInterval(()=>{const now=new Date();setCurrentDate(formatDate(now));// Update the formatted date\nupdateTime();// Update the time every second\n},1000);return()=>clearInterval(intervalId);},[]);return/*#__PURE__*/_jsxs(\"div\",{id:\"DateandTime\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"currentDate\",children:currentDate}),/*#__PURE__*/_jsx(\"div\",{id:\"currentTime\",children:currentTime})]});}export default TimeandLocation;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TimeandLocation","currentDate","setCurrentDate","currentTime","setCurrentTime","formatDate","date","options","year","month","day","toLocaleDateString","updateTime","now","Date","timeString","toLocaleTimeString","intervalId","setInterval","clearInterval","id","children"],"sources":["/Users/pranavithapa/Desktop/devote-site/devote-backup/src/components/MiniComponents/TimeAndCity.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction TimeandLocation() {\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(\"\");\n\n  useEffect(() => {\n    function formatDate(date) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return date.toLocaleDateString([], options);\n    }\n\n    function updateTime() {\n      const now = new Date();\n      const timeString = now.toLocaleTimeString();\n      setCurrentTime(timeString);\n    }\n\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      setCurrentDate(formatDate(now)); // Update the formatted date\n      updateTime(); // Update the time every second\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div id=\"DateandTime\">\n      <div id=\"currentDate\">{currentDate}</div>\n      <div id=\"currentTime\">{currentTime}</div>\n    </div>\n  );\n}\n\nexport default TimeandLocation;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd,QAAS,CAAAU,UAAUA,CAACC,IAAI,CAAE,CACxB,KAAM,CAAAC,OAAO,CAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,MAAM,CAAEC,GAAG,CAAE,SAAU,CAAC,CAClE,MAAO,CAAAJ,IAAI,CAACK,kBAAkB,CAAC,EAAE,CAAEJ,OAAO,CAAC,CAC7C,CAEA,QAAS,CAAAK,UAAUA,CAAA,CAAG,CACpB,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,UAAU,CAAGF,GAAG,CAACG,kBAAkB,CAAC,CAAC,CAC3CZ,cAAc,CAACW,UAAU,CAAC,CAC5B,CAEA,KAAM,CAAAE,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnC,KAAM,CAAAL,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtBZ,cAAc,CAACG,UAAU,CAACQ,GAAG,CAAC,CAAC,CAAE;AACjCD,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMO,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACElB,KAAA,QAAKqB,EAAE,CAAC,aAAa,CAAAC,QAAA,eACnBxB,IAAA,QAAKuB,EAAE,CAAC,aAAa,CAAAC,QAAA,CAAEpB,WAAW,CAAM,CAAC,cACzCJ,IAAA,QAAKuB,EAAE,CAAC,aAAa,CAAAC,QAAA,CAAElB,WAAW,CAAM,CAAC,EACtC,CAAC,CAEV,CAEA,cAAe,CAAAH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}